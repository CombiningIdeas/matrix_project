#pragma once

/**
 * @file tests_matrix.h
 * @brief Заголовочный файл для тестирования функций работы с матрицами.
 * 
 * В этом файле содержатся объявления функций, предназначенных для тестирования функций
 * работы с матрицами, таких как создание, копирование, освобождение памяти, а также операции
 * сложения, умножения, транспонирования и вычисления детерминанта.
 * 
 * Тесты выполняются с использованием фреймворка CUnit и проверяют корректность всех
 * операций с матрицами.
 */

/**
 * @brief Тест для создания матрицы.
 * 
 * Эта функция проверяет корректность работы функции `create_matrix`, которая создает
 * матрицу заданных размеров. Мы проверяем, что матрица создана и имеет правильные размеры.
 */
void test_create_matrix();

/**
 * @brief Тест для освобождения памяти.
 * 
 * Эта функция проверяет работу функции `free_matrix`, которая освобождает память,
 * занятую матрицей. Мы удостоверяемся, что освобождение памяти не вызывает сбоев.
 */
void test_free_matrix();

/**
 * @brief Тест для копирования матрицы.
 * 
 * Эта функция проверяет корректность работы функции `copy_matrix`, которая создает
 * копию исходной матрицы. Мы проверяем, что значения в копии матрицы совпадают с
 * оригинальными значениями.
 */
void test_copy_matrix();

/**
 * @brief Тест для сложения матриц.
 * 
 * Эта функция проверяет работу функции `add_matrices`, которая выполняет операцию
 * сложения двух матриц. Мы проверяем, что результат сложения матриц соответствует
 * ожидаемым значениям.
 */
void test_add_matrices();

/**
 * @brief Тест для умножения матриц.
 * 
 * Эта функция проверяет работу функции `multiply_matrices`, которая выполняет
 * операцию умножения двух матриц. Мы проверяем, что результат умножения матриц
 * соответствует ожидаемым значениям.
 */
void test_multiply_matrices();

/**
 * @brief Тест для транспонирования матрицы.
 * 
 * Эта функция проверяет работу функции `transpose_matrix`, которая выполняет
 * операцию транспонирования матрицы. Мы проверяем, что элементы матрицы после
 * транспонирования находятся в правильных местах.
 */
void test_transpose_matrix();

/**
 * @brief Тест для вычисления детерминанта матрицы.
 * 
 * Эта функция проверяет работу функции `determinant`, которая вычисляет детерминант
 * матрицы. Мы проверяем, что вычисленное значение детерминанта соответствует
 * ожидаемому результату.
 */
void test_determinant();

/**
 * @brief Главная функция для выполнения всех тестов.
 * 
 * Эта функция запускает все тесты, связанные с работой с матрицами. Она выполняет
 * серию проверок для различных операций с матрицами.
 * 
 * @return 0 в случае успешного выполнения всех тестов, в противном случае возвращает код ошибки.
 */
int main_tests_matrix();
